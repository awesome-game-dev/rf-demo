{"version":3,"sources":["../node_modules/@ionic/core/dist/esm-es5 lazy /^/.//.*/.entry/.js$/ groupOptions: {} namespace object","../node_modules/ionicons/dist/esm lazy /^/.//.*/.entry/.js$/ include: //.entry/.js$/ exclude: //.system/.entry/.js$/ groupOptions: {} namespace object","models/potion.ts","models/level.ts","models/node.ts","models/node-data.ts","models/weapon.ts","models/edge-data.ts","models/edge.ts","models/rogue.ts","models/land.ts","pages/Home.tsx","components/nodes/CommonNode.tsx","components/nodes/RogueNode.tsx","components/Node.tsx","components/Label.tsx","utils/useWindowSize.ts","pages/Game.tsx","App.tsx","serviceWorkerRegistration.ts","reportWebVitals.ts","index.tsx"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","keys","Object","module","exports","PotionVariant","Level","types","model","identifierNumber","nodes","late","array","reference","Node","actions","self","spawnNodes","_land","land","nodesN","random","spawnNodeIds","idStart","idEnd","range","index","forEach","node","level","indexInBatch","batchSize","MARGIN_BETWEEN_NODES","posX","posY","data","type","sample","GENABLE_NODE_TYPES","NodeType","Blank","Monster","power","Weapon","weapon","genWeapon","Potion","potion","genPotion","genNodeData","create","newNode","put","push","WeaponVariant","POTION_VARIANTS","Hearts","Healing","POTION_VARIANT_VALUES","values","PotionModel","variant","enumeration","number","WEAPON_VARIANTS","Sword","WEAPON_VARIANT_VALUES","WeaponModel","NodeDataType","union","literal","Rogue","incomingEdgesN","outgoingEdgesN","views","position","x","y","className","flowClass","EdgeType","EdgeDataType","Trap","genEdgeData","Edge","identifier","source","target","icon","console","warn","flowData","animated","toString","label","distance","hp","maxHp","maybe","coins","damage","fight","enemyPower","undefined","Math","min","drink","reset","interactWithEdge","edge","interactWithNode","landStore","maxNodeId","levels","maxLevelId","edges","rogueNode","safeReference","rogue","edgeBetweenNodes","Array","from","isReachable","nodesData","edgesData","spawnNodeId","n","start","end","spawnEdge","destroyNode","edgeId","delete","remove","nodeInLevel","spawnEdgesBetween","prevLevel","nextLevel","i","j","spawn","cases","length","spawnLevel","get","newLevelId","init","clear","move","isDead","onSnapshot","snapshot","log","LandStoreContext","createContext","useLand","store","useContext","Home","fullscreen","collapse","size","routerLink","CommonNode","props","Position","Bottom","Top","memo","RogueNode","observer","JSON","stringify","Coins","getSize","innerHeight","window","innerWidth","outerHeight","outerWidth","useWindowSize","useState","windowSize","setWindowSize","handleResize","useEffect","addEventListener","removeEventListener","TRANSITION_EASING","Easing","Quadratic","Out","requestAnimationFrame","animate","time","TWEEN","update","Game","focusPosX","focusPosY","landData","flowInstance","setFlowInstance","onLoad","useCallback","instance","fitView","panToRogue","toObject","zoom","nodeX","nodeY","Tween","to","easing","onUpdate","setTransform","panToNode","nodeTypes","elements","elementsSelectable","nodesDraggable","nodesConnectable","onElementClick","_event","element","elementIsNode","BackgroundVariant","Lines","Label","App","Provider","value","path","component","GamePage","exact","HomePage","Boolean","location","hostname","match","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"kGAAA,IAAIA,EAAM,CACT,8BAA+B,CAC9B,GACA,GAED,uBAAwB,CACvB,GACA,GAED,uBAAwB,CACvB,GACA,GAED,0BAA2B,CAC1B,GACA,IAED,6BAA8B,CAC7B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,wBAAyB,CACxB,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,sBAAuB,CACtB,IACA,IAED,uBAAwB,CACvB,IACA,IAED,4BAA6B,CAC5B,IACA,IAED,uBAAwB,CACvB,IACA,IAED,qBAAsB,CACrB,IACA,IAED,mCAAoC,CACnC,IACA,IAED,uBAAwB,CACvB,IACA,IAED,+BAAgC,CAC/B,IACA,IAED,wBAAyB,CACxB,IACA,IAED,yBAA0B,CACzB,IACA,IAED,wBAAyB,CACxB,IACA,IAED,uBAAwB,CACvB,IACA,GAED,uBAAwB,CACvB,IACA,IAED,yBAA0B,CACzB,IACA,GAED,8BAA+B,CAC9B,IACA,IAED,yBAA0B,CACzB,IACA,IAED,uBAAwB,CACvB,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,+BAAgC,CAC/B,IACA,IAED,yBAA0B,CACzB,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,yBAA0B,CACzB,IACA,IAED,yBAA0B,CACzB,IACA,IAED,4BAA6B,CAC5B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,uBAAwB,CACvB,IACA,IAED,sBAAuB,CACtB,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,uBAAwB,CACvB,IACA,IAED,wBAAyB,CACxB,IACA,IAED,gCAAiC,CAChC,IACA,KAGF,SAASC,EAAoBC,GAC5B,IAAIC,EAAoBC,EAAEJ,EAAKE,GAC9B,OAAOG,QAAQC,UAAUC,MAAK,WAC7B,IAAIC,EAAI,IAAIC,MAAM,uBAAyBP,EAAM,KAEjD,MADAM,EAAEE,KAAO,mBACHF,KAIR,IAAIG,EAAMX,EAAIE,GAAMU,EAAKD,EAAI,GAC7B,OAAOR,EAAoBK,EAAEG,EAAI,IAAIJ,MAAK,WACzC,OAAOJ,EAAoBS,MAG7BX,EAAoBY,KAAO,WAC1B,OAAOC,OAAOD,KAAKb,IAEpBC,EAAoBW,GAAK,GACzBG,EAAOC,QAAUf,G,mBChMjB,IAAID,EAAM,CACT,sBAAuB,CACtB,IACA,KAGF,SAASC,EAAoBC,GAC5B,IAAIC,EAAoBC,EAAEJ,EAAKE,GAC9B,OAAOG,QAAQC,UAAUC,MAAK,WAC7B,IAAIC,EAAI,IAAIC,MAAM,uBAAyBP,EAAM,KAEjD,MADAM,EAAEE,KAAO,mBACHF,KAIR,IAAIG,EAAMX,EAAIE,GAAMU,EAAKD,EAAI,GAC7B,OAAOR,EAAoBK,EAAEG,EAAI,IAAIJ,MAAK,WACzC,OAAOJ,EAAoBS,MAG7BX,EAAoBY,KAAO,WAC1B,OAAOC,OAAOD,KAAKb,IAEpBC,EAAoBW,GAAK,GACzBG,EAAOC,QAAUf,G,0GCrBLgB,E,uFCgCGC,EA7BDC,IACXC,MAAM,CACLR,GAAIO,IAAME,iBACVC,MAAOH,IAAMI,MAAK,kBAAMJ,IAAMK,MAAML,IAAMM,UAAUC,SAErDC,SAAQ,SAAAC,GAAI,MAAK,CAChBC,WADgB,SACJC,GACV,IAAMC,EAAOD,EAEPE,EAASC,iBAAO,EAAG,GACzB,EAAyBF,EAAKG,aAAaF,GAA3C,mBAAOG,EAAP,KAAgBC,EAAhB,KACMzB,EAAM0B,gBAAMF,EAASC,EAAQ,GAE/BE,EAAQ,EACZ3B,EAAI4B,SAAQ,SAAA3B,GACV,IAAM4B,ECyBP,YAKW,IALS5B,EAKV,EALUA,GAAI6B,EAKd,EALcA,MAAOC,EAKrB,EALqBA,aAAcC,EAKnC,EALmCA,UAM5CC,EAAuB,IAEzBC,EAAOH,EAAeE,GADX,GAAKD,EAAY,GAAK,EAAIC,GAErCE,GAAgB,IAATL,EAGXI,GAAQZ,kBAAQ,GAAI,IACpBa,GAAQb,kBAAQ,GAAI,IAEpB,IAAMc,EC/BD,WACL,IAAMC,EAZCC,iBAAOC,GAad,OAAQF,GACN,KAAKG,EAASC,MACZ,MAAO,CAAEJ,QACX,KAAKG,EAASE,QAEZ,MAAO,CAAEL,OAAMM,MADDrB,iBAAO,EAAG,IAG1B,KAAKkB,EAASI,OACZ,MAAO,CACLP,OACAQ,OAAQC,KAGZ,KAAKN,EAASO,OACZ,MAAO,CACLV,OACAW,OAAQC,MDaDC,GAEb,OAAOnC,EAAKoC,OAAO,CACjBlD,KACA6B,QACAI,OACAC,OACAC,SD/CiBgB,CAAQ,CACnBnD,KACA6B,MAAOb,EAAKhB,GACZ8B,aAAcJ,EACdK,UAAWX,IAEbD,EAAKT,MAAM0C,IAAIxB,GACfZ,EAAKN,MAAM2C,KAAKzB,GAEhBF,GAAS,W,SD3BLrB,K,gBAAAA,E,mBAAAA,M,KAIZ,IIJYiD,EJINC,EAAkB,CAAClD,EAAcmD,OAAQnD,EAAcoD,SACvDC,EAAwBxD,OAAOyD,OAAOtD,GAE/BuD,EAAcrD,IAAMC,MAAM,CACrCqD,QAAStD,IAAMuD,YAA2B,gBAAiBJ,GAC3DhB,MAAOnC,IAAMwD,SAKR,SAASf,IAGd,MAAO,CACLa,QAHcxB,iBAAOkB,GAGZb,MAFGrB,iBAAO,EAAG,K,SIhBdiC,K,eAAAA,M,KAGZ,IDDYf,ECCNyB,EAAkB,CAACV,EAAcW,OACjCC,EAAwBhE,OAAOyD,OAAOL,GAE/Ba,EAAc5D,IAAMC,MAAM,CACrCqD,QAAStD,IAAMuD,YAA2B,gBAAiBI,GAC3DxB,MAAOnC,IAAMwD,SAKR,SAASlB,IAGd,MAAO,CACLgB,QAHcxB,iBAAO2B,GAGZtB,MAFGrB,iBAAO,EAAG,K,SDbdkB,K,cAAAA,E,cAAAA,E,kBAAAA,E,gBAAAA,E,iBAAAA,M,KASZ,IAAMD,EAAqB,CACzBC,EAASC,MAAOD,EAASE,QAASF,EAASI,OAAQJ,EAASO,QAOvD,IAAMsB,EAAe7D,IAAM8D,MAChC9D,IAAMC,MAAM,CAAE4B,KAAM7B,IAAM+D,QAAQ/B,EAASgC,SAC3ChE,IAAMC,MAAM,CAAE4B,KAAM7B,IAAM+D,QAAQ/B,EAASC,SAC3CjC,IAAMC,MAAM,CAAE4B,KAAM7B,IAAM+D,QAAQ/B,EAASE,SAAUC,MAAOnC,IAAMwD,SAClExD,IAAMC,MAAM,CAAE4B,KAAM7B,IAAM+D,QAAQ/B,EAASI,QAASC,OAAQuB,IAC5D5D,IAAMC,MAAM,CAAE4B,KAAM7B,IAAM+D,QAAQ/B,EAASO,QAASC,OAAQa,KDfvD,IAED9C,EAAOP,IACVC,MAAM,CACLR,GAAIO,IAAME,iBACVoB,MAAOtB,IAAMM,UAAUN,IAAMI,MAAK,kBAAqBL,MACvDkE,eAAgB,EAChBC,eAAgB,EAChBxC,KAAM1B,IAAMwD,OACZ7B,KAAM3B,IAAMwD,OAEZ5B,KAAMiC,IAEPM,OAAM,SAAA1D,GAAI,MAAK,CACd,gBACE,MAAM,QAAN,OAAeA,EAAKmB,KAAKC,WAG5BsC,OAAM,SAAA1D,GAAI,MAAK,CACd,eACE,MAAO,CACLhB,GAAG,GAAD,OAAKgB,EAAKhB,IACZ2E,SAAU,CACRC,EAAG5D,EAAKiB,KACR4C,EAAG7D,EAAKkB,MAEVE,KAAM,OACN0C,UAAW9D,EAAK+D,gBAiCTjE,IGrEHkE,EHqEGlE,K,SGrEHkE,K,cAAAA,E,aAAAA,M,KAKL,IAAMC,EAAe1E,IAAM8D,MAEhC9D,IAAMC,MAAM,CAAE4B,KAAM7B,IAAM+D,QAAQU,EAASxC,SAE3CjC,IAAMC,MAAM,CACV4B,KAAM7B,IAAM+D,QAAQU,EAASE,MAC7BxC,MAAOnC,IAAMwD,UAIV,SAASoB,IACd,IAAM/C,EAAOC,iBAAO,CAClB2C,EAASxC,MACTwC,EAASE,OAGX,OAAQ9C,GACN,KAAK4C,EAASxC,MACZ,MAAO,CAAEJ,QACX,KAAK4C,EAASE,KAEZ,MAAO,CACL9C,OACAM,MAHYrB,iBAAO,EAAG,KCnB9B,IAoCe+D,EApCF7E,IACVC,MAAM,CACLR,GAAIO,IAAM8E,WACVC,OAAQ/E,IAAMM,UAAUC,GACxByE,OAAQhF,IAAMM,UAAUC,GACxBqB,KAAM8C,IAEPP,OAAM,SAAA1D,GAAI,MAAK,CACd,YACE,OAAQA,EAAKmB,KAAKC,MAChB,KAAK4C,EAASxC,MACZ,OAAO,KACT,KAAKwC,EAASE,KAAO,IAAD,EAEZM,EAAOnD,iBAAO,CAAC,eAAM,eAAM,eAAM,iBACvC,MAAM,GAAN,OAAUmD,GAAV,iBAAiBxE,EAAKmB,YAAtB,aAAiB,EAAWO,OAE9B,QAEE,OADA+C,QAAQC,KAAK,sBAAuB1E,EAAKmB,MAClC,WAIduC,OAAM,SAAA1D,GAAI,MAAK,CACd2E,SADc,WACkC,IAAtCC,EAAqC,wDAC7C,MAAO,CACL5F,GAAIgB,EAAKhB,GACTsF,OAAQtE,EAAKsE,OAAOtF,GAAG6F,WACvBN,OAAQvE,EAAKuE,OAAOvF,GAAG6F,WACvBC,MAAO9E,EAAK8E,MACZ1D,KAAM,UACNwD,iB,QC0DOrB,EAxFDhE,IACXC,MAAM,CACLuF,SAAU,EACVC,GALY,GAMZC,MANY,GAOZrD,OAAQrC,IAAM2F,MAAM/B,GACpBgC,MAAO,IAERzB,OAAM,SAAA1D,GAAI,MAAK,CACd,aACE,OAAOA,EAAKgF,IAAM,OAGrBjF,SAAQ,SAAAC,GAAI,MAAK,CAChBoF,OADgB,SACRA,GACNpF,EAAKgF,IAAMI,OAGdrF,SAAQ,SAAAC,GAAI,MAAK,CAChBqF,MADgB,SACTC,GAGL,QAAoBC,IAAhBvF,EAAK4B,OAAsB,CAC7B,IAAMwD,EAASI,KAAKC,IAAIzF,EAAK4B,OAAOF,MAAO4D,GAQ3C,GAPAtF,EAAK4B,OAAOF,OAAS0D,EACrBE,GAAcF,EAEY,IAAtBpF,EAAK4B,OAAOF,QACd1B,EAAK4B,YAAS2D,GAGG,IAAfD,EACF,OAIJtF,EAAKoF,OAAOE,IAEdI,MApBgB,SAoBT3D,GACL,OAAQA,EAAOc,SACb,KAAKxD,EAAcmD,OAGjB,OAFAxC,EAAKiF,OAASlD,EAAOL,WACrB1B,EAAKgF,IAAMjD,EAAOL,OAEpB,KAAKrC,EAAcoD,QAEjB,YADAzC,EAAKgF,GAAKQ,KAAKC,IAAIzF,EAAKgF,GAAKjD,EAAOL,MAAO1B,EAAKiF,cAKvDlF,SAAQ,SAAAC,GAAI,MAAK,CAChB2F,MADgB,WAEd3F,EAAK+E,SAAW,EAChB/E,EAAKgF,GAvDK,GAwDVhF,EAAKiF,MAxDK,GAyDVjF,EAAKmF,MAAQ,EACbnF,EAAK4B,YAAS2D,GAEhBK,iBARgB,SAQEC,GAChB,OAAQA,EAAK1E,KAAKC,MAChB,KAAK4C,EAASxC,MACZ,MACF,KAAKwC,EAASE,KACZlE,EAAKoF,OAAOS,EAAK1E,KAAKO,SAI5BoE,iBAjBgB,SAiBElF,GAChB,OAAQA,EAAKO,KAAKC,MAChB,KAAKG,EAASC,MACZ,MACF,KAAKD,EAASE,QACZzB,EAAKqF,MAAMzE,EAAKO,KAAKO,OACrB,MACF,KAAKH,EAASI,OACZ3B,EAAK4B,OAAL,eAAmBhB,EAAKO,KAAKS,QAC7B,MACF,KAAKL,EAASO,OACZ9B,EAAK0F,MAAM9E,EAAKO,KAAKY,QACrB,MACF,QACE0C,QAAQC,KAAK,uCCyIVqB,EAzNOxG,IACjBC,MAAM,CACLR,GAAIO,IAAM8E,WACV3E,MAAOH,IAAMnB,IAAI0B,GACjBkG,WAAY,EACZC,OAAQ1G,IAAMnB,IAAIkB,GAClB4G,YAAa,EACbC,MAAO5G,IAAMnB,IAAIgG,GAGjBgC,UAAW7G,IAAM8G,cAAcvG,GAC/BwG,MAAO/C,IAERG,OAAM,SAAA1D,GAAI,MAAK,CACduG,iBADc,SACIjC,EAAsBC,GACtC,cAAmBiC,MAAMC,KAAKzG,EAAKmG,MAAMxD,UAAzC,eAAoD,CAA/C,IAAMkD,EAAI,KACb,GAAIA,EAAKvB,SAAWA,GAAUuB,EAAKtB,SAAWA,EAC5C,OAAOsB,QAKdnC,OAAM,SAAA1D,GAAI,MAAK,CACd0G,YADc,SACD9F,GAA8B,IAAD,EAGxC,OADgB,UAAGZ,EAAKoG,iBAAR,aAAG,EAAgBvF,OACjB7B,GAAK,IAAM4B,EAAKC,MAAM7B,QAG3C0E,OAAM,SAAA1D,GAAI,MAAK,CACd,eACE,IAAM2G,EAAYH,MAAMC,KAAKzG,EAAKN,MAAMiD,UAAUvE,KAAI,SAAAwC,GAAI,OAAIA,EAAK+D,YAC7DiC,EAAYJ,MAAMC,KAAKzG,EAAKmG,MAAMxD,UAAUvE,KAAI,SAAAyH,GAAI,OAAIA,EAAKlB,SAAS3E,EAAK0G,YAAYb,EAAKtB,YAClG,MAAM,GAAN,mBAAWoC,GAAX,YAAyBC,SAG5B7G,SAAQ,SAAAC,GAAI,MAAK,CAChB6G,YADgB,WAGd,OADA7G,EAAKgG,WAAa,EACXhG,EAAKgG,WAEd1F,aALgB,SAKFwG,GACZ,IAAMC,EAAQ/G,EAAKgG,UAAY,EACzBgB,EAAMD,EAAQD,EAAI,EAExB,OADA9G,EAAKgG,UAAYgB,EACV,CAACD,EAAOC,IAEjBC,UAXgB,SAWL3C,EAAgBC,GACzB,IAAMvF,EAAE,YAAQsF,EAAR,YAAkBC,GACpBsB,EAAOzB,EAAKlC,OAAO,CACvBlD,KACAsF,OAAQA,EACRC,OAAQA,EACRpD,KAAMgD,MAERnE,EAAKmG,MAAM/D,IAAIyD,GACfA,EAAKtB,OAAOf,gBAAkB,EAC9BqC,EAAKvB,OAAOb,gBAAkB,GAGhCyD,YAxBgB,SAwBHtG,GACPA,IAASZ,EAAKoG,YAIlBpG,EAAKmG,MAAMxF,SAAQ,SAACkF,EAAMsB,GACxB,GAAItB,EAAKvB,OAAOtF,KAAO4B,EAAK5B,GAAI,CAC9B,IAAMuF,EAASsB,EAAKtB,OAEpBsB,EAAKtB,OAAOf,gBAAkB,EAC9BqC,EAAKvB,OAAOb,gBAAkB,EAC9BzD,EAAKmG,MAAMiB,OAAOD,GAGY,IAA1B5C,EAAOf,gBAETxD,EAAKkH,YAAY3C,OAKvB8C,iBAAOzG,EAAKC,MAAMnB,OAAO,SAAC4H,GAAD,OAAiBA,IAAgB1G,KAC1DZ,EAAKN,MAAM0H,OAAOxG,EAAK5B,GAAG6F,kBAG7B9E,SAAQ,SAAAC,GAAI,MAAK,CAChBuH,kBADgB,SACGC,EAA0BC,GAC3C,IAAIC,EAAI,EACJC,EAAI,EAEFC,EAAQ,WACZ5H,EAAKiH,UAAUO,EAAU9H,MAAMgI,GAAG1I,GAAIyI,EAAU/H,MAAMiI,GAAG3I,KAI3D,IADA4I,MACa,CACX,IAAMC,EAAQ,GAUd,GARIH,EAAIF,EAAU9H,MAAMoI,OAAS,GAC/BD,EAAMxF,KAAK,mBAGTsF,EAAIF,EAAU/H,MAAMoI,OAAS,GAC/BD,EAAMxF,KAAK,mBAGQ,IAAjBwF,EAAMC,OACR,MAGF,OAAQzG,iBAAOwG,IACb,IAAK,kBACHH,GAAK,EACL,MACF,IAAK,kBACHC,GAAK,EAGTC,UAIL7H,SAAQ,SAAAC,GAAI,MAAK,CAChB+H,WADgB,WAEd,IAAMP,EAAYxH,EAAKiG,OAAO+B,IAAIhI,EAAKkG,WAAWrB,YAClD7E,EAAKkG,YAAc,EACnB,IAAM+B,EAAajI,EAAKkG,WAClBrF,EAAQvB,EAAM4C,OAAO,CACzBlD,GAAIiJ,EACJvI,MAAO,KAITmB,EAAMZ,WAAWD,GACjBA,EAAKiG,OAAO7D,IAAIvB,GAGhBb,EAAKuH,kBAAkBC,EAAW3G,QAGrCd,SAAQ,SAAAC,GAAI,MAAK,CAChBkI,KADgB,WAEd,IAAMtH,EAAOd,EAAKoC,OAAO,CACvBlD,GAAI,EACJ6B,MAAO,EACPI,KAAM,EACNC,KAAM,EACNC,KAAM,CACJC,KAAMG,EAASgC,SAGnBvD,EAAKN,MAAM0C,IAAIxB,GACfZ,EAAKiG,OAAO7D,IAAI9C,EAAM4C,OAAO,CAC3BlD,GAAI,EACJU,MAAO,CAAC,MAGVM,EAAKoG,UAAYxF,EAEjBZ,EAAKkG,WAAa,EAClBlG,EAAKgG,UAAY,EAEjBhG,EAAK+H,aACL/H,EAAK+H,aACL/H,EAAK+H,kBAGRhI,SAAQ,SAAAC,GAAI,MAAK,CAChB2F,MADgB,WAEd3F,EAAKiG,OAAOkC,QACZnI,EAAKN,MAAMyI,QACXnI,EAAKmG,MAAMgC,QACXnI,EAAKkG,YAAc,EACnBlG,EAAKgG,WAAa,EAElBhG,EAAKsG,MAAMX,QAEX3F,EAAKkI,YAGRnI,SAAQ,SAAAC,GAAI,MAAK,CAChBoI,KADgB,SACV7D,GAAuB,IAAD,EACpBiD,EAAS,UAAGxH,EAAKoG,iBAAR,aAAG,EAAgBvF,MAG5BgF,EAAO7F,EAAKuG,iBAAiBvG,EAAKoG,UAA2B7B,GAGnEvE,EAAKsG,MAAMV,iBAAiBC,GACxB7F,EAAKsG,MAAM+B,OACbrI,EAAK2F,SAKP3F,EAAKsG,MAAMR,iBAAiBvB,GACxBvE,EAAKsG,MAAM+B,OACbrI,EAAK2F,SAKPpB,EAAOpD,KAAO,CAAEC,KAAMG,EAASgC,OAC/BvD,EAAKoG,UAAY7B,EACjBvE,EAAKsG,MAAMvB,UAAY,EAGvByC,EAAU9H,MAAMiB,SAAQ,SAACC,GACvBZ,EAAKkH,YAAYtG,MAEnBZ,EAAKiG,OAAOmB,OAAOI,EAAUxI,GAAG6F,YAGhC7E,EAAK+H,oBAImB7F,OAAO,CACnClD,GAAI,OACJoH,UAAW,EACXE,MAAO,KAETP,EAAUmC,OAEVI,YAAWvC,GAAW,SAAAwC,GACpB9D,QAAQ+D,IAAI,yBAA0BD,MAKjC,IAAME,EAAmBC,wBAAmC,MAE5D,SAASC,IACd,IAAMC,EAAQC,qBAAWJ,GACzB,GAAc,OAAVG,EACF,MAAM,IAAI/J,MAAM,uDAElB,OAAO+J,E,iBCjOME,EApBQ,WACrB,OACE,eAAC,IAAD,WACE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,cAAC,IAAD,wBAGJ,eAAC,IAAD,CAAYC,YAAU,EAAtB,UACE,cAAC,IAAD,CAAWC,SAAS,WAApB,SACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAUC,KAAK,QAAf,uBAGJ,cAAC,IAAD,CAAWC,WAAW,QAAtB,yB,wBCdFC,EAAa,SAACC,GAClB,OACE,qCACE,cAAC,IAAD,CACEhI,KAAK,SACLuC,SAAU0F,IAASC,SAErB,cAAC,IAAD,CACElI,KAAK,SACLuC,SAAU0F,IAASE,MAGrB,gCACGH,EAAM5E,UACWe,IAAjB6D,EAAMrG,OAAN,WAAiCqG,EAAMrG,QAAW,UAM5CyG,iBAAKL,GCSLM,EA3BGC,aAAS,WACzB,IACMpD,EADOqC,IACMrC,MAEnB,OACE,qCACE,+CAGGA,EAAMtB,GAHT,IAGcsB,EAAMrB,MAElB,0CAGkBM,IAAjBe,EAAM1E,OAAN,sBAAkC0E,EAAM1E,OAAOF,OAAU,YAK5D,cAAC,IAAD,CACEN,KAAK,SACLuC,SAAU0F,IAASE,YCcZzJ,EAjCF,SAACsJ,GACZ,IACMxI,EADO+H,IACKjJ,MAAMsI,IAAIoB,EAAMpK,IAIlC,QAAauG,IAAT3E,EACF,OAAO,KAGT,OAAQA,EAAKO,KAAKC,MAChB,KAAKG,EAASgC,MACZ,OAAO,cAAC,EAAD,IACT,KAAKhC,EAASC,MACZ,OAAO,cAAC,EAAD,CAAYgD,KAAK,iBAC1B,KAAKjD,EAASE,QACZ,OAAO,cAAC,EAAD,CAAY+C,KAAK,eAAKzB,OAAQnC,EAAKO,KAAKO,QACjD,KAAKH,EAASI,OACZ,OAAO,cAAC,EAAD,CAAY6C,KAAK,eAAKzB,OAAQnC,EAAKO,KAAKS,OAAOF,QACxD,KAAKH,EAASO,OACZ,OAAQlB,EAAKO,KAAKY,OAAOc,SACvB,KAAKxD,EAAcmD,OACjB,OAAO,cAAC,EAAD,CAAYgC,KAAK,eAAKzB,OAAQnC,EAAKO,KAAKY,OAAOL,QACxD,KAAKrC,EAAcoD,QACjB,OAAO,cAAC,EAAD,CAAY+B,KAAK,eAAKzB,OAAQnC,EAAKO,KAAKY,OAAOL,QAE1D,MACF,QAEE,OADA+C,QAAQC,KAAK,0BAA2BiF,KAAKC,UAAUhJ,EAAKO,OACrD,+BCpBE0I,EAbDH,aAAS,WACrB,IACMpD,EADOqC,IACMrC,MAEnB,OACE,sBAAKtH,GAAG,cAAR,mBACSsH,EAAMnB,MACb,uBAFF,YAGYmB,EAAMvB,e,MCAtB,SAAS+E,IACP,MAAO,CACLC,YAAaC,OAAOD,YACpBE,WAAYD,OAAOC,WACnBC,YAAaF,OAAOE,YACpBC,WAAYH,OAAOG,YAqBRC,MAjBf,WACE,MAAoCC,mBAASP,KAA7C,mBAAOQ,EAAP,KAAmBC,EAAnB,KAEA,SAASC,IACPD,EAAcT,KAUhB,OAPAW,qBAAU,WAER,OADAT,OAAOU,iBAAiB,SAAUF,GAC3B,WACLR,OAAOW,oBAAoB,SAAUH,MAEtC,IAEIF,GCjBHM,EAAoBC,IAAOC,UAAUC,IAO3CC,uBAJA,SAASC,EAASC,GAChBF,sBAAsBC,GACtBE,IAAMC,OAAOF,MAIf,IAmFeG,EAnFQ3B,aAAS,WAC9B,IAAMY,EAAaF,IACbkB,EAAYhB,EAAWL,WAAa,EACpCsB,EAAYjB,EAAWP,YAAc,EAAI,EAEzC5J,EAAOwI,IACP6C,EAAWrL,EAAKwE,SAEtB,EAAwC0F,mBAAc,MAAtD,mBAAOoB,EAAP,KAAqBC,EAArB,KAEMC,EAASC,uBAAY,SAACC,GAC1BH,EAAgBG,GAChBA,EAASC,UACTC,EAAWF,KACV,IAuBGE,EAAa,SAACF,IArBF,SAACA,EAAejL,GAChC,MAGIiL,EAASG,WAHb,gBACErI,SADF,GACaC,EADb,KACgBC,EADhB,KAEEoI,EAFF,EAEEA,KAGIC,EAAQ,EAAItL,EAAKK,KAAOqK,EACxBa,EAAQ,EAAIvL,EAAKM,KAAOqK,EAE9B,IAAIa,IAAM,CAAExI,IAAGC,IAAGoI,SACfI,GACC,CAAEzI,EAAGsI,EAAOrI,EAAGsI,EAAOF,KAAM,GArCR,KAwCrBK,OAAO1B,GACP2B,UAAS,YAAqB,IAAlB3I,EAAiB,EAAjBA,EAAGC,EAAc,EAAdA,EAAGoI,EAAW,EAAXA,KACjBJ,EAASW,aAAa,CAAE5I,IAAGC,IAAGoI,YAE/BlF,QAIH0F,CAAUZ,EAAU1L,EAAKiG,YAsB3B,OACE,cAAC,IAAD,UACE,eAAC,IAAD,CAAY2C,YAAU,EAAtB,UAEE,cAAC,IAAD,CACE2D,UAAW,CAAE9L,KAAMd,GACnB6M,SAAUnB,EACVoB,oBAAoB,EACpBC,gBAAgB,EAChBC,kBAAkB,EAClBnB,OAAQA,EACRoB,eA9Be,SAACC,EAA0BC,GAKhD,GAJA,SAAwBA,GACtB,OAAOA,EAAQtJ,SAGZuJ,CAAcD,GAAnB,CAIA,IAAM1I,EAASpE,EAAKT,MAAMsI,IAAIiF,EAAQjO,IACjCmB,EAAKuG,YAAYnC,KAItBpE,EAAKiI,KAAK7D,GAEVwH,EAAWN,MAOP,SASE,cAAC,IAAD,CAAY5I,QAASsK,IAAkBC,UAGzC,cAACC,EAAD,YC5DOC,G,kEAdO,kBACpB,cAAC,IAAD,UACE,cAAC7E,EAAiB8E,SAAlB,CAA2BC,MAAOzH,EAAlC,SACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAO0H,KAAK,QAAQC,UAAWC,EAAUC,OAAK,IAC9C,cAAC,IAAD,CAAOH,KAAK,QAAQC,UAAWG,EAAUD,OAAK,IAC9C,cAAC,IAAD,CAAUnH,KAAK,IAAI4F,GAAG,QAAQuB,OAAK,eCvBzBE,QACW,cAA7B9D,OAAO+D,SAASC,UAEe,UAA7BhE,OAAO+D,SAASC,UAEhBhE,OAAO+D,SAASC,SAASC,MAAM,2DCfnC,IAYeC,GAZS,SAACC,GACH,MAAfA,GAAwBA,aAAuBC,UAClD,+BAAqBzP,MAAK,YAAkD,IAA/C0P,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SF0HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBtQ,MAAK,SAACuQ,GACLA,EAAaC,gBAEdC,OAAM,SAACC,GACN5K,QAAQ4K,MAAMA,EAAMC,YErH5BpB,O","file":"static/js/main.f822c32d.chunk.js","sourcesContent":["var map = {\n\t\"./ion-action-sheet.entry.js\": [\n\t\t96,\n\t\t5\n\t],\n\t\"./ion-alert.entry.js\": [\n\t\t97,\n\t\t6\n\t],\n\t\"./ion-app_8.entry.js\": [\n\t\t98,\n\t\t7\n\t],\n\t\"./ion-avatar_3.entry.js\": [\n\t\t99,\n\t\t17\n\t],\n\t\"./ion-back-button.entry.js\": [\n\t\t100,\n\t\t18\n\t],\n\t\"./ion-backdrop.entry.js\": [\n\t\t101,\n\t\t43\n\t],\n\t\"./ion-button_2.entry.js\": [\n\t\t102,\n\t\t19\n\t],\n\t\"./ion-card_5.entry.js\": [\n\t\t103,\n\t\t20\n\t],\n\t\"./ion-checkbox.entry.js\": [\n\t\t104,\n\t\t21\n\t],\n\t\"./ion-chip.entry.js\": [\n\t\t105,\n\t\t22\n\t],\n\t\"./ion-col_3.entry.js\": [\n\t\t106,\n\t\t44\n\t],\n\t\"./ion-datetime_3.entry.js\": [\n\t\t107,\n\t\t10\n\t],\n\t\"./ion-fab_3.entry.js\": [\n\t\t108,\n\t\t23\n\t],\n\t\"./ion-img.entry.js\": [\n\t\t109,\n\t\t45\n\t],\n\t\"./ion-infinite-scroll_2.entry.js\": [\n\t\t110,\n\t\t46\n\t],\n\t\"./ion-input.entry.js\": [\n\t\t111,\n\t\t24\n\t],\n\t\"./ion-item-option_3.entry.js\": [\n\t\t112,\n\t\t25\n\t],\n\t\"./ion-item_8.entry.js\": [\n\t\t113,\n\t\t26\n\t],\n\t\"./ion-loading.entry.js\": [\n\t\t114,\n\t\t27\n\t],\n\t\"./ion-menu_3.entry.js\": [\n\t\t115,\n\t\t28\n\t],\n\t\"./ion-modal.entry.js\": [\n\t\t116,\n\t\t8\n\t],\n\t\"./ion-nav_2.entry.js\": [\n\t\t117,\n\t\t14\n\t],\n\t\"./ion-popover.entry.js\": [\n\t\t118,\n\t\t9\n\t],\n\t\"./ion-progress-bar.entry.js\": [\n\t\t119,\n\t\t29\n\t],\n\t\"./ion-radio_2.entry.js\": [\n\t\t120,\n\t\t30\n\t],\n\t\"./ion-range.entry.js\": [\n\t\t121,\n\t\t31\n\t],\n\t\"./ion-refresher_2.entry.js\": [\n\t\t122,\n\t\t11\n\t],\n\t\"./ion-reorder_2.entry.js\": [\n\t\t123,\n\t\t16\n\t],\n\t\"./ion-ripple-effect.entry.js\": [\n\t\t124,\n\t\t47\n\t],\n\t\"./ion-route_4.entry.js\": [\n\t\t125,\n\t\t32\n\t],\n\t\"./ion-searchbar.entry.js\": [\n\t\t126,\n\t\t33\n\t],\n\t\"./ion-segment_2.entry.js\": [\n\t\t127,\n\t\t34\n\t],\n\t\"./ion-select_3.entry.js\": [\n\t\t128,\n\t\t35\n\t],\n\t\"./ion-slide_2.entry.js\": [\n\t\t129,\n\t\t48\n\t],\n\t\"./ion-spinner.entry.js\": [\n\t\t130,\n\t\t13\n\t],\n\t\"./ion-split-pane.entry.js\": [\n\t\t131,\n\t\t49\n\t],\n\t\"./ion-tab-bar_2.entry.js\": [\n\t\t132,\n\t\t36\n\t],\n\t\"./ion-tab_2.entry.js\": [\n\t\t133,\n\t\t15\n\t],\n\t\"./ion-text.entry.js\": [\n\t\t134,\n\t\t37\n\t],\n\t\"./ion-textarea.entry.js\": [\n\t\t135,\n\t\t38\n\t],\n\t\"./ion-toast.entry.js\": [\n\t\t136,\n\t\t39\n\t],\n\t\"./ion-toggle.entry.js\": [\n\t\t137,\n\t\t12\n\t],\n\t\"./ion-virtual-scroll.entry.js\": [\n\t\t138,\n\t\t50\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 67;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./ion-icon.entry.js\": [\n\t\t139,\n\t\t57\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 69;\nmodule.exports = webpackAsyncContext;","import { random, sample } from 'lodash'\nimport { Instance, types } from 'mobx-state-tree'\n\nexport enum PotionVariant {\n  Hearts = 'HEARTS',\n  Healing = 'HEALING'\n}\nconst POTION_VARIANTS = [PotionVariant.Hearts, PotionVariant.Healing]\nconst POTION_VARIANT_VALUES = Object.values(PotionVariant)\n\nexport const PotionModel = types.model({\n  variant: types.enumeration<PotionVariant>('PotionVariant', POTION_VARIANT_VALUES),\n  power: types.number\n})\n\nexport type PotionInstance = Instance<typeof PotionModel>\n\nexport function genPotion (): PotionInstance {\n  const variant = sample(POTION_VARIANTS) as PotionVariant\n  const power = random(1, 5)\n  return {\n    variant, power\n  }\n}\n","import { random, range } from 'lodash'\nimport { Instance, types } from 'mobx-state-tree'\nimport { LandInstance } from './land'\n\nimport Node, { newNode } from './node'\n\nconst Level = types\n  .model({\n    id: types.identifierNumber,\n    nodes: types.late(() => types.array(types.reference(Node)))\n  })\n  .actions(self => ({\n    spawnNodes (_land: any) {\n      const land = _land as LandInstance\n\n      const nodesN = random(3, 5)\n      const [idStart, idEnd] = land.spawnNodeIds(nodesN)\n      const ids = range(idStart, idEnd + 1)\n\n      let index = 0\n      ids.forEach(id => {\n        const node = newNode({\n          id,\n          level: self.id,\n          indexInBatch: index,\n          batchSize: nodesN\n        })\n        land.nodes.put(node)\n        self.nodes.push(node)\n\n        index += 1\n      })\n    }\n  }))\n\nexport default Level\nexport type LevelInstance = Instance<typeof Level>\n","import { random } from 'lodash'\nimport { IAnyModelType, Instance, types } from 'mobx-state-tree'\n\nimport * as reactFlow from 'react-flow-renderer'\n\nimport Level from './level'\nimport { genNodeData, NodeDataType } from './node-data'\n\ninterface NodeData { label: string }\n\nexport type FlowNode = reactFlow.Node<NodeData>\n\nexport const NODE_H = 36\n\nconst Node = types\n  .model({\n    id: types.identifierNumber,\n    level: types.reference(types.late((): IAnyModelType => Level)),\n    incomingEdgesN: 0,\n    outgoingEdgesN: 0,\n    posX: types.number,\n    posY: types.number,\n\n    data: NodeDataType\n  })\n  .views(self => ({\n    get flowClass (): string {\n      return `node ${self.data.type}`\n    }\n  }))\n  .views(self => ({\n    get flowData (): FlowNode {\n      return {\n        id: `${self.id}`,\n        position: {\n          x: self.posX,\n          y: self.posY\n        },\n        type: 'node', // orverride\n        className: self.flowClass\n      }\n    }\n  }))\n\nexport type NodeInstance = Instance<typeof Node>\n\nexport function newNode ({ id, level, indexInBatch, batchSize }: {\n  id: number\n  level: number\n  indexInBatch: number\n  batchSize: number\n}): NodeInstance {\n  const MARGIN_BETWEEN_NODES = 150\n  const deltaX = 0 - (batchSize - 1) / 2 * MARGIN_BETWEEN_NODES\n  let posX = indexInBatch * MARGIN_BETWEEN_NODES + deltaX\n  let posY = level * -150\n\n  // TODO\n  posX += random(-20, 20)\n  posY += random(-20, 20)\n\n  const data = genNodeData()\n\n  return Node.create({\n    id,\n    level,\n    posX,\n    posY,\n    data\n  })\n}\n\nexport default Node\n","import { random, sample } from 'lodash'\nimport { Instance, types } from 'mobx-state-tree'\nimport { genPotion, PotionModel } from './potion'\nimport { genWeapon, WeaponModel } from './weapon'\n\nexport enum NodeType {\n  Rogue = 'ROGUE',\n  Blank = 'BLANK',\n  Monster = 'MONSTER',\n  Weapon = 'WEAPON',\n  Potion = 'POTION'\n}\n\ntype GenableNodeType = NodeType.Blank | NodeType.Monster | NodeType.Weapon | NodeType.Potion\nconst GENABLE_NODE_TYPES = [\n  NodeType.Blank, NodeType.Monster, NodeType.Weapon, NodeType.Potion\n]\n\nfunction genNodeType (): GenableNodeType {\n  return sample(GENABLE_NODE_TYPES) as GenableNodeType\n}\n\nexport const NodeDataType = types.union(\n  types.model({ type: types.literal(NodeType.Rogue) }),\n  types.model({ type: types.literal(NodeType.Blank) }),\n  types.model({ type: types.literal(NodeType.Monster), power: types.number }), // TODO monster model\n  types.model({ type: types.literal(NodeType.Weapon), weapon: WeaponModel }),\n  types.model({ type: types.literal(NodeType.Potion), potion: PotionModel })\n)\n\nexport function genNodeData (): Instance<typeof NodeDataType> {\n  const type = genNodeType()\n  switch (type) {\n    case NodeType.Blank:\n      return { type }\n    case NodeType.Monster: {\n      const power = random(1, 5)\n      return { type, power }\n    }\n    case NodeType.Weapon: {\n      return {\n        type,\n        weapon: genWeapon()\n      }\n    }\n    case NodeType.Potion: {\n      return {\n        type,\n        potion: genPotion()\n      }\n    }\n  }\n}\n","import { random, sample } from 'lodash'\nimport { Instance, types } from 'mobx-state-tree'\n\nexport enum WeaponVariant {\n  Sword = 'SWORD'\n}\nconst WEAPON_VARIANTS = [WeaponVariant.Sword]\nconst WEAPON_VARIANT_VALUES = Object.values(WeaponVariant)\n\nexport const WeaponModel = types.model({\n  variant: types.enumeration<WeaponVariant>('WeaponVariant', WEAPON_VARIANT_VALUES),\n  power: types.number\n})\n\nexport type WeaponInstance = Instance<typeof WeaponModel>\n\nexport function genWeapon (): WeaponInstance {\n  const variant = sample(WEAPON_VARIANTS) as WeaponVariant\n  const power = random(1, 5)\n  return {\n    variant, power\n  }\n}\n","import { random, sample } from 'lodash'\nimport { Instance, types } from 'mobx-state-tree'\n\nexport enum EdgeType {\n  Blank = 'BLANK',\n  Trap = 'TRAP',\n}\n\nexport const EdgeDataType = types.union(\n  // blank\n  types.model({ type: types.literal(EdgeType.Blank) }),\n  // trap\n  types.model({\n    type: types.literal(EdgeType.Trap),\n    power: types.number\n  })\n)\n\nexport function genEdgeData (): Instance<typeof EdgeDataType> {\n  const type = sample([\n    EdgeType.Blank,\n    EdgeType.Trap\n  ]) as EdgeType\n\n  switch (type) {\n    case EdgeType.Blank:\n      return { type }\n    case EdgeType.Trap: {\n      const power = random(1, 3)\n      return {\n        type,\n        power\n      }\n    }\n  }\n}\n","import { sample } from 'lodash'\nimport { Instance, types } from 'mobx-state-tree'\nimport * as reactFlow from 'react-flow-renderer'\nimport { EdgeDataType, EdgeType } from './edge-data'\n\nimport Node from './node'\n\nexport type FlowEdge = reactFlow.Edge<any>\n\nconst Edge = types\n  .model({\n    id: types.identifier,\n    source: types.reference(Node),\n    target: types.reference(Node),\n    data: EdgeDataType\n  })\n  .views(self => ({\n    get label (): string | null {\n      switch (self.data.type) {\n        case EdgeType.Blank:\n          return null\n        case EdgeType.Trap: {\n          // TODO\n          const icon = sample(['🌊', '🪤', '🔥', '🌪']) as string\n          return `${icon}${self.data?.power}`\n        }\n        default:\n          console.warn('CantFigureEdgeLabel', self.data)\n          return null\n      }\n    }\n  }))\n  .views(self => ({\n    flowData (animated: boolean = false): FlowEdge {\n      return {\n        id: self.id,\n        source: self.source.id.toString(),\n        target: self.target.id.toString(),\n        label: self.label,\n        type: 'default',\n        animated\n      }\n    }\n  }))\n\nexport default Edge\nexport type EdgeInstance = Instance<typeof Edge>\n","import { Instance, types } from 'mobx-state-tree'\nimport { EdgeInstance } from './edge'\nimport { EdgeType } from './edge-data'\nimport { NodeInstance } from './node'\nimport { NodeType } from './node-data'\nimport { PotionInstance, PotionVariant } from './potion'\nimport { WeaponModel } from './weapon'\n\nconst INIT_HP = 10\n\nconst Rogue = types\n  .model({\n    distance: 0,\n    hp: INIT_HP,\n    maxHp: INIT_HP,\n    weapon: types.maybe(WeaponModel),\n    coins: 0\n  })\n  .views(self => ({\n    get isDead () {\n      return self.hp <= 0\n    }\n  }))\n  .actions(self => ({\n    damage (damage: number) {\n      self.hp -= damage\n    }\n  }))\n  .actions(self => ({\n    fight (enemyPower: number) {\n      // TODO shield\n\n      if (self.weapon !== undefined) {\n        const damage = Math.min(self.weapon.power, enemyPower)\n        self.weapon.power -= damage\n        enemyPower -= damage\n\n        if (self.weapon.power === 0) {\n          self.weapon = undefined\n        }\n\n        if (enemyPower === 0) {\n          return\n        }\n      }\n\n      self.damage(enemyPower)\n    },\n    drink (potion: PotionInstance) {\n      switch (potion.variant) {\n        case PotionVariant.Hearts:\n          self.maxHp += potion.power\n          self.hp += potion.power\n          return\n        case PotionVariant.Healing:\n          self.hp = Math.min(self.hp + potion.power, self.maxHp)\n          return\n      }\n    }\n  }))\n  .actions(self => ({\n    reset () {\n      self.distance = 0\n      self.hp = INIT_HP\n      self.maxHp = INIT_HP\n      self.coins = 0\n      self.weapon = undefined\n    },\n    interactWithEdge (edge: EdgeInstance) {\n      switch (edge.data.type) {\n        case EdgeType.Blank:\n          break\n        case EdgeType.Trap:\n          self.damage(edge.data.power)\n          break\n      }\n    },\n    interactWithNode (node: NodeInstance) {\n      switch (node.data.type) {\n        case NodeType.Blank:\n          break\n        case NodeType.Monster:\n          self.fight(node.data.power)\n          break\n        case NodeType.Weapon:\n          self.weapon = { ...node.data.weapon }\n          break\n        case NodeType.Potion:\n          self.drink(node.data.potion)\n          break\n        default:\n          console.warn('DontKnowHowToInteractWithNode')\n      }\n    }\n  }))\n\nexport type RogueInstance = Instance<typeof Rogue>\n\nexport default Rogue\n","import { remove, sample } from 'lodash'\nimport { useContext, createContext } from 'react'\nimport { Instance, onSnapshot, types } from 'mobx-state-tree'\n\nimport Node, { NodeInstance } from './node'\nimport Edge, { EdgeInstance } from './edge'\nimport Level, { LevelInstance } from './level'\nimport Rogue from './rogue'\nimport { NodeType } from './node-data'\nimport { genEdgeData } from './edge-data'\n\nexport const Land = types\n  .model({\n    id: types.identifier,\n    nodes: types.map(Node),\n    maxNodeId: -1,\n    levels: types.map(Level),\n    maxLevelId: -1,\n    edges: types.map(Edge), // TODO why not array of edges. there was a reason and i forgot :|\n    // NOTE only has to be a safeRef instead of a ref\n    // cuz a issue around resetting rogueNode\n    rogueNode: types.safeReference(Node),\n    rogue: Rogue\n  })\n  .views(self => ({\n    edgeBetweenNodes (source: NodeInstance, target: NodeInstance): EdgeInstance | undefined {\n      for (const edge of Array.from(self.edges.values())) {\n        if (edge.source === source && edge.target === target) {\n          return edge\n        }\n      }\n    }\n  }))\n  .views(self => ({\n    isReachable (node: NodeInstance): boolean {\n      // TODO loop in rogueNode's outgoing edges\n      const rogueLevel = self.rogueNode?.level as LevelInstance\n      return rogueLevel.id + 1 === node.level.id\n    }\n  }))\n  .views(self => ({\n    get flowData () { // TODO -> flowData\n      const nodesData = Array.from(self.nodes.values()).map(node => node.flowData)\n      const edgesData = Array.from(self.edges.values()).map(edge => edge.flowData(self.isReachable(edge.target)))\n      return [...nodesData, ...edgesData]\n    }\n  }))\n  .actions(self => ({\n    spawnNodeId (): number {\n      self.maxNodeId += 1\n      return self.maxNodeId\n    },\n    spawnNodeIds (n: number): [start: number, end: number] {\n      const start = self.maxNodeId + 1\n      const end = start + n - 1\n      self.maxNodeId = end\n      return [start, end]\n    },\n    spawnEdge (source: number, target: number) {\n      const id = `e-${source}-${target}`\n      const edge = Edge.create({\n        id,\n        source: source,\n        target: target,\n        data: genEdgeData()\n      })\n      self.edges.put(edge)\n      edge.target.incomingEdgesN += 1\n      edge.source.outgoingEdgesN += 1\n    },\n    // recursively destroy node, outgoing edges, and newly become unreachable nodes\n    destroyNode (node: NodeInstance) {\n      if (node === self.rogueNode) { return }\n\n      // destroy out edges\n      // TODO ref edges in node? too complex for sure\n      self.edges.forEach((edge, edgeId) => {\n        if (edge.source.id === node.id) {\n          const target = edge.target\n\n          edge.target.incomingEdgesN -= 1\n          edge.source.outgoingEdgesN -= 1\n          self.edges.delete(edgeId)\n\n          // recursive\n          if (target.incomingEdgesN === 0) {\n            // @ts-ignore\n            self.destroyNode(target)\n          }\n        }\n      })\n\n      remove(node.level.nodes, (nodeInLevel) => nodeInLevel === node)\n      self.nodes.delete(node.id.toString())\n    }\n  }))\n  .actions(self => ({\n    spawnEdgesBetween (prevLevel: LevelInstance, nextLevel: LevelInstance) {\n      let i = 0\n      let j = 0\n\n      const spawn = (): void => {\n        self.spawnEdge(prevLevel.nodes[i].id, nextLevel.nodes[j].id)\n      }\n\n      spawn()\n      while (true) {\n        const cases = []\n\n        if (i < prevLevel.nodes.length - 1) {\n          cases.push('PREV_LEVEL_STEP')\n        }\n\n        if (j < nextLevel.nodes.length - 1) {\n          cases.push('NEXT_LEVEL_STEP')\n        }\n\n        if (cases.length === 0) {\n          break\n        }\n\n        switch (sample(cases)) {\n          case 'PREV_LEVEL_STEP':\n            i += 1\n            break\n          case 'NEXT_LEVEL_STEP':\n            j += 1\n            break\n        }\n        spawn()\n      }\n    }\n  }))\n  .actions(self => ({\n    spawnLevel () {\n      const prevLevel = self.levels.get(self.maxLevelId.toString()) as LevelInstance\n      self.maxLevelId += 1\n      const newLevelId = self.maxLevelId\n      const level = Level.create({\n        id: newLevelId,\n        nodes: []\n      })\n\n      // spawn nodes\n      level.spawnNodes(self)\n      self.levels.put(level)\n\n      // spawn edges\n      self.spawnEdgesBetween(prevLevel, level)\n    }\n  }))\n  .actions(self => ({\n    init () {\n      const node = Node.create({\n        id: 0,\n        level: 0,\n        posX: 0,\n        posY: 0,\n        data: {\n          type: NodeType.Rogue\n        }\n      })\n      self.nodes.put(node)\n      self.levels.put(Level.create({\n        id: 0,\n        nodes: [0]\n      }))\n\n      self.rogueNode = node\n\n      self.maxLevelId = 0\n      self.maxNodeId = 0\n\n      self.spawnLevel()\n      self.spawnLevel()\n      self.spawnLevel()\n    }\n  }))\n  .actions(self => ({\n    reset () {\n      self.levels.clear()\n      self.nodes.clear()\n      self.edges.clear()\n      self.maxLevelId = -1\n      self.maxNodeId = -1\n\n      self.rogue.reset()\n\n      self.init()\n    }\n  }))\n  .actions(self => ({\n    move (target: NodeInstance) {\n      const prevLevel = self.rogueNode?.level as LevelInstance\n      // const targetLevel = target.level as LevelInstance\n\n      const edge = self.edgeBetweenNodes(self.rogueNode as NodeInstance, target) as EdgeInstance\n\n      // interact with edge\n      self.rogue.interactWithEdge(edge)\n      if (self.rogue.isDead) {\n        self.reset()\n        return\n      }\n\n      // interact with nodee\n      self.rogue.interactWithNode(target)\n      if (self.rogue.isDead) {\n        self.reset()\n        return\n      }\n\n      // move\n      target.data = { type: NodeType.Rogue }\n      self.rogueNode = target\n      self.rogue.distance += 1\n\n      // destroy previous level (and thus unavailable nodes)\n      prevLevel.nodes.forEach((node) => {\n        self.destroyNode(node)\n      })\n      self.levels.delete(prevLevel.id.toString())\n\n      // spawn a new level\n      self.spawnLevel()\n    }\n  }))\n\nexport const landStore = Land.create({\n  id: 'land',\n  rogueNode: 0,\n  rogue: {}\n})\nlandStore.init()\n\nonSnapshot(landStore, snapshot => {\n  console.log('landStore.onSnapshot: ', snapshot)\n  // localStorage.setItem('rootState', JSON.stringify(snapshot))\n})\n\nexport type LandInstance = Instance<typeof Land>\nexport const LandStoreContext = createContext<null | LandInstance>(null)\n\nexport function useLand (): LandInstance {\n  const store = useContext(LandStoreContext)\n  if (store === null) {\n    throw new Error('Store cannot be null, please add a context provider')\n  }\n  return store\n}\n","import { IonButton, IonContent, IonHeader, IonPage, IonTitle, IonToolbar } from '@ionic/react'\nimport './Home.css'\n\nconst Home: React.FC = () => {\n  return (\n    <IonPage>\n      <IonHeader>\n        <IonToolbar>\n          <IonTitle>Blank</IonTitle>\n        </IonToolbar>\n      </IonHeader>\n      <IonContent fullscreen>\n        <IonHeader collapse='condense'>\n          <IonToolbar>\n            <IonTitle size='large'>Blank</IonTitle>\n          </IonToolbar>\n        </IonHeader>\n        <IonButton routerLink='/game'>Game</IonButton>\n      </IonContent>\n    </IonPage>\n  )\n}\n\nexport default Home\n","import { memo } from 'react'\nimport { Handle, Position } from 'react-flow-renderer'\n\nconst CommonNode = (props: { icon: string, number?: number }): JSX.Element => {\n  return (\n    <>\n      <Handle\n        type='target'\n        position={Position.Bottom}\n      />\n      <Handle\n        type='source'\n        position={Position.Top}\n      />\n\n      <div>\n        {props.icon}\n        {props.number !== undefined ? ` ${props.number}` : ''}\n      </div>\n    </>\n  )\n}\n\nexport default memo(CommonNode)\n","import { observer } from 'mobx-react-lite'\nimport { Handle, Position } from 'react-flow-renderer'\n\nimport { useLand } from '../../models/land'\n\nconst RogueNode = observer((): JSX.Element => {\n  const land = useLand()\n  const rogue = land.rogue\n\n  return (\n    <>\n      <div>\n        {/* health */}\n        ❤️\n        {rogue.hp}/{rogue.maxHp}\n\n        <span> </span>\n\n        {/* weapon */}\n        {rogue.weapon !== undefined ? `⚔️${rogue.weapon.power}` : '✊'}\n\n        {/* TODO shield */}\n      </div>\n\n      <Handle\n        type='source'\n        position={Position.Top}\n      />\n    </>\n  )\n})\n\nexport default RogueNode\n","import { useLand } from '../models/land'\nimport { FlowNode } from '../models/node'\nimport { NodeType } from '../models/node-data'\nimport { PotionVariant } from '../models/potion'\nimport CommonNode from './nodes/CommonNode'\nimport RogueNode from './nodes/RogueNode'\n\nconst Node = (props: FlowNode): JSX.Element | null => {\n  const land = useLand()\n  const node = land.nodes.get(props.id)\n\n  // TODO HACK\n  // dont know why ReactFlow renders Node for deleted node\n  if (node === undefined) {\n    return null\n  }\n\n  switch (node.data.type) {\n    case NodeType.Rogue:\n      return <RogueNode />\n    case NodeType.Blank:\n      return <CommonNode icon='⛺️' />\n    case NodeType.Monster:\n      return <CommonNode icon='👾' number={node.data.power} />\n    case NodeType.Weapon:\n      return <CommonNode icon='⚔️' number={node.data.weapon.power} />\n    case NodeType.Potion:\n      switch (node.data.potion.variant) {\n        case PotionVariant.Hearts:\n          return <CommonNode icon='💕' number={node.data.potion.power} />\n        case PotionVariant.Healing:\n          return <CommonNode icon='🧪' number={node.data.potion.power} />\n      }\n      break\n    default:\n      console.warn('DontKnowHowToRenderNode', JSON.stringify(node.data))\n      return <></>\n  }\n}\n\nexport default Node\n","import { observer } from 'mobx-react-lite'\nimport { useLand } from '../models/land'\n\nconst Coins = observer(() => {\n  const land = useLand()\n  const rogue = land.rogue\n\n  return (\n    <div id='coins-label'>\n      coins {rogue.coins}\n      <br />\n      distance {rogue.distance}\n    </div>\n  )\n})\n\nexport default Coins\n","// https://github.com/rehooks/window-size/blob/master/index.js\n\nimport { useEffect, useState } from 'react'\n\ninterface WindowSize {\n  innerHeight: number\n  innerWidth: number\n  outerHeight: number\n  outerWidth: number\n}\n\nfunction getSize (): WindowSize {\n  return {\n    innerHeight: window.innerHeight,\n    innerWidth: window.innerWidth,\n    outerHeight: window.outerHeight,\n    outerWidth: window.outerWidth\n  }\n}\n\nfunction useWindowSize (): WindowSize {\n  const [windowSize, setWindowSize] = useState(getSize())\n\n  function handleResize (): void {\n    setWindowSize(getSize())\n  }\n\n  useEffect(() => {\n    window.addEventListener('resize', handleResize)\n    return () => {\n      window.removeEventListener('resize', handleResize)\n    }\n  }, [])\n\n  return windowSize\n}\n\nexport default useWindowSize\n","import React, { useCallback, useState } from 'react'\nimport { observer } from 'mobx-react-lite'\nimport TWEEN, { Easing, Tween } from '@tweenjs/tween.js'\nimport { IonContent, IonPage } from '@ionic/react'\nimport ReactFlow, { Background, BackgroundVariant } from 'react-flow-renderer'\n\nimport { FlowEdge } from '../models/edge'\nimport { useLand } from '../models/land'\nimport { FlowNode, NodeInstance } from '../models/node'\n\nimport Node from '../components/Node'\nimport Label from '../components/Label'\n\nimport './Game.css'\nimport useWindowSize from '../utils/useWindowSize'\n\nconst TRANSITION_DURATION = 300\nconst TRANSITION_EASING = Easing.Quadratic.Out\n\n// Setup the animation loop.\nfunction animate (time: number): void {\n  requestAnimationFrame(animate)\n  TWEEN.update(time)\n}\nrequestAnimationFrame(animate)\n\nconst Game: React.FC = observer(() => {\n  const windowSize = useWindowSize()\n  const focusPosX = windowSize.innerWidth / 2\n  const focusPosY = windowSize.innerHeight / 3 * 2\n\n  const land = useLand()\n  const landData = land.flowData\n\n  const [flowInstance, setFlowInstance] = useState<any>(null) // TODO\n\n  const onLoad = useCallback((instance) => {\n    setFlowInstance(instance)\n    instance.fitView()\n    panToRogue(instance)\n  }, [])\n\n  const panToNode = (instance: any, node: NodeInstance): void => {\n    const {\n      position: [x, y],\n      zoom\n    } = instance.toObject()\n\n    const nodeX = 0 - node.posX + focusPosX\n    const nodeY = 0 - node.posY + focusPosY\n\n    new Tween({ x, y, zoom })\n      .to(\n        { x: nodeX, y: nodeY, zoom: 1 },\n        TRANSITION_DURATION\n      )\n      .easing(TRANSITION_EASING)\n      .onUpdate(({ x, y, zoom }) => {\n        instance.setTransform({ x, y, zoom })\n      })\n      .start()\n  }\n\n  const panToRogue = (instance: any): void => {\n    panToNode(instance, land.rogueNode as NodeInstance)\n  }\n\n  const onElementClick = (_event: React.MouseEvent, element: FlowNode | FlowEdge): void => {\n    function elementIsNode (element: any): element is FlowNode {\n      return element.position\n    }\n\n    if (!elementIsNode(element)) {\n      return\n    }\n\n    const target = land.nodes.get(element.id) as NodeInstance\n    if (!land.isReachable(target)) {\n      return\n    }\n\n    land.move(target)\n\n    panToRogue(flowInstance)\n  }\n\n  return (\n    <IonPage>\n      <IonContent fullscreen>\n\n        <ReactFlow\n          nodeTypes={{ node: Node }}\n          elements={landData}\n          elementsSelectable={false}\n          nodesDraggable={false}\n          nodesConnectable={false}\n          onLoad={onLoad}\n          onElementClick={onElementClick}\n        >\n          <Background variant={BackgroundVariant.Lines} />\n        </ReactFlow>\n\n        <Label />\n\n      </IonContent>\n    </IonPage>\n  )\n})\n\nexport default Game\n","import { Redirect, Route } from 'react-router-dom'\nimport { IonApp, IonRouterOutlet } from '@ionic/react'\nimport { IonReactHashRouter, IonReactRouter } from '@ionic/react-router'\n\nimport { landStore, LandStoreContext } from './models/land'\nimport HomePage from './pages/Home'\nimport GamePage from './pages/Game'\n\n/* Core CSS required for Ionic components to work properly */\nimport '@ionic/react/css/core.css'\n\n/* Basic CSS for apps built with Ionic */\nimport '@ionic/react/css/normalize.css'\nimport '@ionic/react/css/structure.css'\nimport '@ionic/react/css/typography.css'\n\n/* Optional CSS utils that can be commented out */\nimport '@ionic/react/css/padding.css'\nimport '@ionic/react/css/float-elements.css'\nimport '@ionic/react/css/text-alignment.css'\nimport '@ionic/react/css/text-transformation.css'\nimport '@ionic/react/css/flex-utils.css'\nimport '@ionic/react/css/display.css'\n\n/* Theme variables */\nimport './theme/variables.css'\nimport React from 'react'\n\nconst App: React.FC = () => (\n  <IonApp>\n    <LandStoreContext.Provider value={landStore}>\n      <IonReactHashRouter>\n        <IonRouterOutlet>\n          <Route path='/game' component={GamePage} exact />\n          <Route path='/home' component={HomePage} exact />\n          <Redirect from='/' to='/home' exact />\n        </IonRouterOutlet>\n      </IonReactHashRouter>\n    </LandStoreContext.Provider>\n  </IonApp>\n)\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n)\n\ninterface Config {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void\n  onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register (config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW (swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller != null) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              )\n\n              // Execute callback\n              if ((config != null) && (config.onUpdate != null)) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if ((config != null) && (config.onSuccess != null)) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker (swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && !contentType.includes('javascript'))\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.')\n    })\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister()\n      })\n      .catch((error) => {\n        console.error(error.message)\n      })\n  }\n}\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if ((onPerfEntry != null) && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister()\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}